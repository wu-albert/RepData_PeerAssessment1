x<-data.frame(x1=c(a,b,c,d,d), x2=c(1,2,3,4,4))
library(data.table)
x<-data.frame(x1=c(a,b,c,d,d), x2=c(1,2,3,4,4))
x<-data.table(x1=c(a,b,c,d,d), x2=c(1,2,3,4,4))
x<-data.table(x1=c(a,b,c,d,d), x2=c(1,2,3,4,4)   )
x<-data.table(x1=c('a','b','c','d','d'), x2=c(1,2,3,4,4)   )
y<-data.table(y1=c(1,2,3,4,5), y2=c(11,12,13,14,15))
?merge
merge(x,y,by.x=x2)
merge(x,y,by.x=x$x2)
merge(x,y,by.x='x2', by.y = 'y1')
merge(x=baltNEI2, y=SCC, by.x='SCC', by.y = 'SCC')
head(SCC[ ,c('SCC','EI.Sector')])
baltNEI2 <- merge(x=baltNEI2, y=SCC[ ,c('SCC','EI.Sector')], by.x='SCC', by.y = 'SCC')
emissionsDataBalt4 <- aggregate(Emissions ~ year + EI.Sector, data=baltNEI2, sum)
ggplot(emissionsDataBalt4,
aes(x = factor(year), y = Emissions, fill= EI.Sector)) +
geom_bar(stat= "identity") +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Total Coal-Related Emissions")
SCC_vehicle <- SCC[indexes, 'SCC']
baltNEI2<-baltNEI[baltNEI$SCC %in% SCC_vehicle, ]
baltNEI2 <- merge(x=baltNEI2,
y=SCC[ ,c('SCC','EI.Sector')],
by.x='SCC',
by.y = 'SCC')
emissionsDataBalt4 <- aggregate(Emissions ~ year + EI.Sector, data=baltNEI2, sum)
ggplot(emissionsDataBalt4,
aes(x = factor(year), y = Emissions, fill= EI.Sector)) +
geom_bar(stat= "identity") +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Total Coal-Related Emissions")
ggplot(emissionsDataBalt4,
aes(x = factor(year), y = Emissions, fill= EI.Sector)) +
geom_bar(stat= "identity") +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Total Coal-Related Emissions") +
theme(legend.position="topright")
?theme
ggplot(emissionsDataBalt4,
aes(x = factor(year), y = Emissions, fill= EI.Sector)) +
geom_bar(stat= "identity") +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Total Coal-Related Emissions") +
theme(legend.position=c(1,1))
ggplot(emissionsDataBalt4,
aes(x = factor(year), y = Emissions, fill= EI.Sector)) +
geom_bar(stat= "identity") +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Total Coal-Related Emissions") +
theme(legend.position="top")
ggplot(emissionsDataBalt4,
aes(x = factor(year), y = Emissions, fill= EI.Sector)) +
geom_bar(stat= "identity") +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Total Coal-Related Emissions") +
theme(legend.position=c(0.7,0.7))
ggplot(emissionsDataBalt4,
aes(x = factor(year), y = Emissions, fill= EI.Sector)) +
geom_bar(stat= "identity") +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Total Coal-Related Emissions") +
theme(legend.position=c(0.85,0.85))
ggplot(emissionsDataBalt4,
aes(x = factor(year), y = Emissions, fill= EI.Sector)) +
geom_bar(stat= "identity") +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Total Coal-Related Emissions") +
theme(legend.position=c(0.7,0.85))
ggplot(emissionsDataBalt4,
aes(x = factor(year), y = Emissions, fill= EI.Sector)) +
geom_bar(stat= "identity") +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Emissions From Motor Vehicles in Baltimore") +
theme(legend.title = "Legend",
legend.position=c(0.7,0.8))
ggplot(emissionsDataBalt4,
aes(x = factor(year), y = Emissions, fill= EI.Sector)) +
geom_bar(stat= "identity") +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Emissions From Motor Vehicles in Baltimore") +
theme(legend.position=c(0.7,0.8))
png('plot5.png')
ggplot(emissionsDataBalt4,
aes(x = factor(year), y = Emissions, fill= EI.Sector)) +
geom_bar(stat= "identity") +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Emissions From Motor Vehicles in Baltimore") +
theme(legend.position=c(0.7,0.8))
dev.off()
LANEI<-subset(NEI, fips =="06037")
LANEI2<-LANEI[LANEI$SCC %in% SCC_vehicle, ]
LANEI2 <- merge(x=LANEI2,
y=SCC[ ,c('SCC','EI.Sector')],
by.x='SCC',
by.y = 'SCC')
emissionsDataLA <- aggregate(Emissions ~ year + EI.Sector, data=LANEI2, sum)
par( mfrow=c(1,2) )
ggplot(emissionsDataBalt4,
aes(x = factor(year), y = Emissions, fill= EI.Sector)) +
geom_bar(stat= "identity") +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Total Coal-Related Emissions")
ggplot(emissionsDataBalt4,
aes(x = factor(year), y = Emissions, fill= EI.Sector)) +
geom_bar(stat= "identity") +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Total Coal-Related Emissions") +
theme(legend.position=c(0.7,0.85))
par( mfrow=c(1,2) )
ggplot(emissionsDataBalt,
aes(x = factor(year), y = Emissions, fill= EI.Sector)) +
geom_bar(stat= "identity") +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Emissions From Motor Vehicles in Baltimore") +
par( mfrow=c(1,2) )
baltNEI<-subset(NEI, fips =="24510")
LANEI<-subset(NEI, fips =="06037")
LANEI<-subset(NEI, fips =="06037")
indexes<-grep("vehicle", SCC$EI.Sector, ignore.case=TRUE)
SCC_vehicle <- SCC[indexes, 'SCC']
baltNEI2<-baltNEI[baltNEI$SCC %in% SCC_vehicle, ]
LANEI2<-LANEI[LANEI$SCC %in% SCC_vehicle, ]
baltNEI2 <- merge(x=baltNEI2,
y=SCC[ ,c('SCC','EI.Sector')],
by.x='SCC',
by.y = 'SCC')
LANEI2 <- merge(x=LANEI2,
y=SCC[ ,c('SCC','EI.Sector')],
by.x='SCC',
by.y = 'SCC')
emissionsDataBalt <- aggregate(Emissions ~ year + EI.Sector, data=baltNEI2, sum)
emissionsDataLA <- aggregate(Emissions ~ year + EI.Sector, data=LANEI2, sum)
par( mfrow=c(1,2) )
ggplot(emissionsDataBalt,
aes(x = factor(year), y = Emissions, fill= EI.Sector)) +
geom_bar(stat= "identity") +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Emissions From Motor Vehicles in Baltimore")
ggplot(emissionsDataLA,
aes(x = factor(year), y = Emissions, fill= EI.Sector)) +
geom_bar(stat= "identity") +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Emissions From Motor Vehicles in LA") +
theme(legend.position=c(0.7,0.8)
)
ls()
ls()-'y'
?ls
rm(list=ls())
if(!exists("NEI")){
NEI <- readRDS("./Rstudio/data/summarySCC_PM25.rds")
}
if(!exists("SCC")){
SCC <- readRDS("./Rstudio/data/Source_Classification_Code.rds")
}
subNEI<-subset(NEI, fips =="24510" | fips == "06037")
indexes<-grep("vehicle", SCC$EI.Sector, ignore.case=TRUE)
SCC_vehicle <- SCC[indexes, 'SCC']
subNEI2<-subNEI[baltNEI$SCC %in% SCC_vehicle, ]
subNEI2<-subNEI[subNEI$SCC %in% SCC_vehicle, ]
location <- data.frame(fips = c("24510","06037"),
location = c("Baltimore","Los Angeles"))
location <- data.frame(fips = as.character( c("24510","06037") ),
location = as.character(  c("Baltimore","Los Angeles") )  )
location <- data.frame(fips = as.character( c("24510","06037") ),
location = as.character(  c("Baltimore","Los Angeles") )  )
location <- data.table(fips = as.character( c("24510","06037") ),
location = as.character(  c("Baltimore","Los Angeles") )  )
library(data.table)
subNEI2 <- merge(x=subNEI2,
y=location,
by='fips')
emissionsByPlace <- aggregate(Emissions ~ year + location, data=subNEI2, sum)
emissionsByPlace
ggplot(emissionsByPlace,
aes(x = factor(year), y = Emissions, fill= location)) +
geom_bar(stat= "identity") +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Emissions From Motor Vehicles in Baltimore")
ggplot(emissionsByPlace,
aes(x = year, y = Emissions, fill= location)) +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Emissions From Motor Vehicles in Baltimore")
ggplot(emissionsByPlace,
aes(x = year, y = Emissions, col= location)) +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Emissions From Motor Vehicles in Baltimore")
ggplot(emissionsByPlace,
aes(x = year, y = Emissions)) +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Emissions From Motor Vehicles in Baltimore")
qplot(x=year,
y=Emissions,
data = emissionsByPlace,
color = factor(location),
geom= "line")
+ ggtitle("Motor Vehicle Emissions in Baltimore (24510) \nvs. Los Angeles (06037) Counties") +
xlab("Year") +
ylab("Emission Levels")
qplot(x=year,
y=Emissions,
data = emissionsByPlace,
color = location,
geom= "line")
+ ggtitle("Motor Vehicle Emissions in Baltimore (24510) \nvs. Los Angeles (06037) Counties") +
xlab("Year") +
ylab("Emission Levels")
ggplot(emissionsByPlace,
aes(x = year, y = Emissions, fill= location)) +
geom_line()) +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Emissions From Motor Vehicles in LA") +
theme(legend.position=c(0.7,0.8))
ggplot(emissionsByPlace,
aes(x = year, y = Emissions, fill= location)) +
geom_line() +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Emissions From Motor Vehicles in LA") +
theme(legend.position=c(0.7,0.8))
ggplot(emissionsByPlace,
aes(x = year, y = Emissions, color= location)) +
geom_line() +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Emissions From Motor Vehicles in LA") +
theme(legend.position=c(0.7,0.8))
ggplot(emissionsByPlace,
aes(x = year, y = Emissions, color= location)) +
geom_line() +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Emissions From Motor Vehicles in LA") +
ggplot(emissionsByPlace,
aes(x = year, y = Emissions, color= location)) +
geom_line() +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Emissions From Motor Vehicles in LA") +
ggplot(emissionsByPlace,
aes(x = year, y = Emissions, color= location)) +
geom_line() +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Emissions From Motor Vehicles in LA")
ggplot(emissionsByPlace,
aes(x = year, y = Emissions, color= location)) +
geom_line() +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Emissions From Motor Vehicles in LA")
ggplot(emissionsByPlace,
aes(x = year, y = Emissions, color= location)) +
geom_line(lwd=2) +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Emissions From Motor Vehicles in LA")
ggplot(emissionsByPlace,
aes(x = year, y = Emissions, color= location)) +
geom_line(lwd=2) +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore (24510) \nvs. Los Angeles (06037) Counties")
+
theme(legend.position="right")
+
theme(legend.position="right")
png('plot6.png')
ggplot(emissionsByPlace,
aes(x = year, y = Emissions, color= location)) +
geom_line(lwd=2) +
xlab("Year") +
ylab("Emissions (tons)") +
ggtitle("Motor Vehicle Emissions in Baltimore (24510) \nvs. Los Angeles Counties (06037)")
dev.off()
rm(list=ls())
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
1+1
1+1
1+1
library(manipulate)
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
33/36
deck
52
1/13
0
9/52
12/52
2/51
0.5*0.8*1.6
.64
mypdf
integrate(mypdf, lower = 0, upper upper = 1.6)
integrate(mypdf, lower = 0, upper = 1.6)
0.5^2/4
2^0.5
swirl()
swirl()
library(swirl)
swirl()
0.997*0.01
0.997*0.001
0.999*0.015
0.997*0.001/(0.997*0.001+0.999*0.015)
3.5
expect_dice()
expect_dice
dice_high
sum(1:6*dice_high)
expect_dice(dice_high)
expect_dice(dice_low)
E((X_hi + X_lo)/2) or .5 *( E(X_hi)+E(X_lo) )
.5 *( E(X_hi)+E(X_lo) )
0.5*(edh+edl)
integrate(myfunc,0,2)
spop
mean(spop)
allsam
apply(allsam, 1, mean)
mean(smeans)
help(qunif)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
sum(x*prob)
sum(temp[1,]*temp[2,])
0.75*0.3/(0.75*0.3+0.48*0.7)
rm(list=ls())
getwd
getwd()
setwd("C:\Users\albert.wu\Github\RepData_PeerAssessment1")
setwd("C:/Users/albert.wu/Github/RepData_PeerAssessment1")
getwd(0)
getwd()
knitr::opts_chunk$set(echo = TRUE)
filename <- "activity.zip"
if (!file.exists(filename)){
fileURL <- "https://github.com/rdpeng/RepData_PeerAssessment1/raw/master/activity.zip"
download.file(fileURL, filename)
}
if (!file.exists("activity")) {
unzip(filename)
}
filename <- "activity.zip"
if (!file.exists(filename)){
fileURL <- "https://github.com/rdpeng/RepData_PeerAssessment1/raw/master/activity.zip"
download.file(fileURL, filename)
}
if (!file.exists("activity")) {
unzip(filename)
}
activity<-read.csv("activity.csv")
head(activity)
str(activity)
hist(activity)
with(activity, plot(date, steps))
hist(activity$steps)
with(activity, hist(steps))
with(activity, hist(steps, col = "green"))
par()
par(mfrow=c(1,1))
with(activity, hist(steps, col = "green"))
par(mfrow=c(1,1))
with(activity, hist(steps, col = "green"))
act_mean=mean(activity$steps)
?mean
act_mean=mean(activity$steps, na.rm = T)
act_mean
?print
filename <- "activity.zip"
if (!file.exists(filename)){
fileURL <- "https://github.com/rdpeng/RepData_PeerAssessment1/raw/master/activity.zip"
download.file(fileURL, filename)
}
if (!file.exists("activity")) {
unzip(filename)
}
activity<-read.csv("activity.csv")
par(mfrow=c(1,1))
with(activity, hist(steps, col = "green"))
mean(activity$steps, na.rm = T)
median(activity$steps, na.rm = T)
mean(activity$steps, na.rm = T)
median(activity$steps, na.rm = T)
str(activity)
?gather
library(tidyr)
?gather
?mutate
?aggregate
actbydate<-aggregate(activity~date, FUN=sum)
actbydate<-aggregate(activity, by=date, FUN=sum)
actbydate<-aggregate(activity$steps, by=activity$date, FUN=sum)
activity$date
actbydate<-aggregate(steps~date, data=activity, FUN=sum)
View(actbydate)
par(mfrow=c(1,1))
with(actbydate, hist(steps, col = "green"))
mean(actbyday$steps, na.rm = T)
median(actbyday$steps, na.rm = T)
mean(actbydate$steps, na.rm = T)
median(actbydate$steps, na.rm = T)
str(activity)
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbydate, hist(steps, col = "green"))
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, hist(steps, col = "pink"))
?plot
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=interval, y=steps, col = "pink"))
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=interval, y=steps, lty="line")
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=interval, y=steps, lty="line")
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=interval, y=steps, lty="line"))
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=interval, y=steps, lty="l"))
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=interval, y=steps, lty=1))
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=interval, y=steps, lty=2))
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=interval, y=steps, type=1, lty=2))
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=interval, y=steps, type="1"", lty=2))
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=interval, y=steps, type="1"", lty=2))
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=interval, y=steps, type="1", lty=2))
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=interval, y=steps, type="l"))
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=interval, y=steps, type="l", lty=2))
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=interval, y=steps, type="l", lty=1))
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=interval, y=steps, type="l", lwd=1))
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=interval, y=steps, type="l", lwd=2))
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=interval, y=steps, type="l", lwd=2, col="blue"))
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=as.date(interval), y=steps, type="l", lwd=2, col="blue"))
?max
?pmax.int
with(actbymin, which(interval, max(steps)))
which(interval, max(actbymin$steps))
which(actbymin, max(actbymin$steps))
which(actbymin$interval== max(actbymin$steps))
which(max(actbymin$steps))
?which
which(max(actbymin$steps))
which(max(actbymin$steps)==max(actbymin$steps))
which(actbymin$steps==max(actbymin$steps))
which(max(actbymin$steps)==actbymin$steps)
actbymin[index]
index<-which(max(actbymin$steps)==actbymin$steps)
actbymin[index]
index<-which(max(actbymin$steps)==actbymin$steps)
actbymin$interval[index]
View(actbymin)
with(actbymin, plot(x=interval, y=steps, type="l", lwd=2, col="blue", title="Average Daily Pattern"))
with(actbymin, plot(x=interval, y=steps, type="l", lwd=2, col="blue", main = ="Average Daily Pattern"))
with(actbymin, plot(x=interval, y=steps, type="l", lwd=2, col="blue", main = ="Average Daily Pattern"))
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=interval, y=steps, type="l", lwd=2, col="blue", main = ="Average Daily Pattern"))
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=interval, y=steps, type="l", lwd=2, col="blue"))
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=interval, y=steps, type="l", lwd=2, col="blue"))
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=interval, y=steps, type="l",  main = ="Average Daily Pattern", lwd=2, col="blue"))
actbymin<-aggregate(steps~interval, data=activity, FUN=mean)
with(actbymin, plot(x=interval, y=steps, type="l",  main ="Average Daily Pattern", lwd=2, col="blue"))
nrows(activity)
nrow(activity)
nrow(activity)
is.na(activity)
nrow(activity)
sum(is.na(activity))
nrow(activity)
sum(is.na(activity))
